name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: write
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          model: "claude-opus-4-20250514"
          
          # Enable WebFetch and WebSearch tools for external research
          allowed_tools: "WebFetch,WebSearch,Bash(*),Read,Write,Edit,MultiEdit,Glob,Grep,LS,Task"
          
          # MCP configuration for enhanced capabilities
          mcp_config: |
            {
              "mcpServers": {
                "fetch": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-fetch"]
                },
                "github": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-github"],
                  "env": {
                    "GITHUB_PERSONAL_ACCESS_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
                  }
                },
                "web-search": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-web-search"]
                }
              }
            }
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"
          
          # Custom instructions for Claude to research Tailscale
          custom_instructions: |
            When creating or updating Tailscale-related diagrams:
            - You can research the Tailscale GitHub repository at https://github.com/tailscale/tailscale
            - You can fetch documentation from https://tailscale.com/kb/ and https://tailscale.com/docs/
            - Use WebSearch to find the latest Tailscale features and architecture details
            - Reference actual Tailscale code and documentation for accuracy
            - Follow the Tailscale-specific standards in CLAUDE.md
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

